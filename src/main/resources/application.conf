akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  extensions = ["com.statusofquo.container.docker.Settings"]

}

akka-actor {

  debug {
    receive = on
    lifecycle = on
    unhandled = on
  }

}

akka.http {

  client {
    connecting-timeout = 10s
    idle-timeout = 60s
    request-header-size-hint = 512
  }

  host-connection-pool {
    max-connections = 4
    max-retries = 5
    max-open-requests = 32
    pipelining-limit = 1
  }

}

postgres = {

    url = "jdbc:postgresql://192.168.99.101:4009/docker"
    driver = "org.postgresql.Driver"
    user = "docker"
    password = "docker"
    connectionPool = disabled
    keepAliveConnection = true

}

IP_ADDRESS : "192.168.99.101"
PORT : "2376"

container {

  database {
    name = "ms_docker"
  }

  storage {
    name = "dbstore"
  }

  info {
    uri = "https://"${IP_ADDRESS}":"${PORT}"/info"
  }

  database {
    start {
      uri = "https://"${IP_ADDRESS}":"${PORT}"/containers/ms_docker/start"
    }
    stop {
      uri = "https://"${IP_ADDRESS}":"${PORT}"/containers/ms_docker/stop"
    }
    create {
      uri = "https://"${IP_ADDRESS}":"${PORT}"/containers/ms_docker/create"
    }
    remove {
      uri = "https://"${IP_ADDRESS}":"${PORT}"/containers/ms_docker/remove"
    }
  }

  storage {
    create {
      uri = "https://"${IP_ADDRESS}":"${PORT}"/containers/ms_docker/create"
    }
    remove {
      uri = "https://"${IP_ADDRESS}":"${PORT}"/containers/ms_docker/remove"
    }
  }
}
